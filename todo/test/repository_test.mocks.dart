// Mocks generated by Mockito 5.4.4 from annotations
// in todo/test/repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:todo/features/authentication/models/request/task.dart' as _i4;
import 'package:todo/features/authentication/models/request/user_profile_request.dart'
    as _i3;
import 'package:todo/network/repositories/todo_repository/api_imp.dart' as _i5;
import 'package:todo/network/repositories/todo_repository/api_service.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiService_0 extends _i1.SmartFake implements _i2.ApiService {
  _FakeApiService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_1 extends _i1.SmartFake implements _i3.User {
  _FakeUser_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTask_2 extends _i1.SmartFake implements _i4.Task {
  _FakeTask_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Repository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRepository extends _i1.Mock implements _i5.Repository {
  MockRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ApiService get apiService => (super.noSuchMethod(
        Invocation.getter(#apiService),
        returnValue: _FakeApiService_0(
          this,
          Invocation.getter(#apiService),
        ),
      ) as _i2.ApiService);

  @override
  _i6.Future<_i3.User> loginUser(
    String? username,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginUser,
          [
            username,
            password,
          ],
        ),
        returnValue: _i6.Future<_i3.User>.value(_FakeUser_1(
          this,
          Invocation.method(
            #loginUser,
            [
              username,
              password,
            ],
          ),
        )),
      ) as _i6.Future<_i3.User>);

  @override
  _i6.Future<_i3.User> getCurrentAuthUser(String? token) => (super.noSuchMethod(
        Invocation.method(
          #getCurrentAuthUser,
          [token],
        ),
        returnValue: _i6.Future<_i3.User>.value(_FakeUser_1(
          this,
          Invocation.method(
            #getCurrentAuthUser,
            [token],
          ),
        )),
      ) as _i6.Future<_i3.User>);

  @override
  _i6.Future<Map<String, dynamic>> refreshToken(String? refreshToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshToken,
          [refreshToken],
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<List<_i4.Task>> getTodos(
    int? limit,
    int? skip,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTodos,
          [
            limit,
            skip,
          ],
        ),
        returnValue: _i6.Future<List<_i4.Task>>.value(<_i4.Task>[]),
      ) as _i6.Future<List<_i4.Task>>);

  @override
  _i6.Future<_i4.Task> getTodoById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTodoById,
          [id],
        ),
        returnValue: _i6.Future<_i4.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #getTodoById,
            [id],
          ),
        )),
      ) as _i6.Future<_i4.Task>);

  @override
  _i6.Future<_i4.Task> getRandomTodo() => (super.noSuchMethod(
        Invocation.method(
          #getRandomTodo,
          [],
        ),
        returnValue: _i6.Future<_i4.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #getRandomTodo,
            [],
          ),
        )),
      ) as _i6.Future<_i4.Task>);

  @override
  _i6.Future<List<_i4.Task>> getTodosByUserId(int? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTodosByUserId,
          [userId],
        ),
        returnValue: _i6.Future<List<_i4.Task>>.value(<_i4.Task>[]),
      ) as _i6.Future<List<_i4.Task>>);

  @override
  _i6.Future<_i4.Task> addTodo(Map<String, dynamic>? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTodo,
          [body],
        ),
        returnValue: _i6.Future<_i4.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #addTodo,
            [body],
          ),
        )),
      ) as _i6.Future<_i4.Task>);

  @override
  _i6.Future<_i4.Task> updateTodo(
    int? id,
    Map<String, dynamic>? body,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTodo,
          [
            id,
            body,
          ],
        ),
        returnValue: _i6.Future<_i4.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #updateTodo,
            [
              id,
              body,
            ],
          ),
        )),
      ) as _i6.Future<_i4.Task>);

  @override
  _i6.Future<Map<String, dynamic>> deleteTodo(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteTodo,
          [id],
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);
}
